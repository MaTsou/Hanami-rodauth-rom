@import "variables.scss";

my-container {
	// design
	display: block;
	border-radius: 0;
	background-color: transparent;
	padding: 0;
	
	&[bordered] {
		border: 1px solid $grey-darker;
	}

	@for $i from 0 through 3 {
		&[bg#{$i}] {
			background-color: var(--bg#{$i});
		}

		&[radius#{$i}] {
			border-radius: var(--radius#{$i});
		}

		&[padding#{$i}] {
			padding: var(--padding#{$i});
		}

	}
		
}

my-center-l {
	display: flex;
	justify-content: space-around;

	& > * {
		max-inline-size: 100%;
	}
}

center-l {
	display: flex;
	justify-content: center;
}

reel-l {
	display: flex;
	width: 100%;
	overflow-x: auto;
	overflow-y: hidden;
}

cluster-l {
	display: flex;
	flex-wrap: wrap;
}

switcher-l {
	display: flex;
	flex-wrap: wrap;
	gap: 1ex;
	--limit: 60ch;

	&> * {
		flex-grow: 1;
		flex-basis: calc( ( var(--limit) - 100% ) * 999 );
	}
}

sidebar-l {
	display: flex;
	flex-wrap: wrap;
	align-items: stretch;
	gap: 1ex;

	>:first-child {
		flex-grow: 1;
	}

	>:last-child {
		flex: 999 0 0px;
	}
}

cover-l {
	display: flex;
	flex-direction: column;
	min-block-size: 100vh; // have to be a parameter !!

	&> .main-for-cover {
		margin-block: auto;
	}

	&>:first-child:not(.main-for-cover) {
		margin-block-end: 1rem;
	}

	&>:last-child:not(.main-for-cover) {
		margin-block-start: 1rem;
	}
}

stack-l {
	display: flex;
	flex-direction: column;

	& > * + * {
		margin-block-start: var(--default-stack-gap);
	}

	&[rule-separated] > * + *:before {
		content: '';
		width: 100%;
		display: block;
		position: relative;
		top: calc( var(--default-stack-gap) / (-2) );
		border-top: 1px solid $grey;
	}

	&[no-gap] > * + * {
			margin-block-start: 0px;
	}

	@for $i from -3 through 2 {
		&[gap#{$i}] {

			&[rule-separated] > * + *:before {
				top: calc( var(--gap#{$i}) / (-2) );
			}

			&> * + * {
				margin-block-start: var(--gap#{$i});

			}
		}
	}

}

